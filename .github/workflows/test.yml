name: Test


on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  linux-test-x86:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:22.04

    steps:
      - uses: actions/checkout@v3
      - name: Install prerequisites
        run: |
          apt update
          apt install -y build-essential g++ make cmake pkg-config git wget curl zip unzip tar
      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git /opt/vcpkg
          /opt/vcpkg/bootstrap-vcpkg.sh
          ln -s /opt/vcpkg/vcpkg /usr/local/bin/vcpkg
      - name: Clone project repository
        run: |
          git clone https://github.com/lk-libs/libcpp-http-client.git /root/libcpp-http-client
      - name: Run cmake with vcpkg toolchain
        run: |
          cd /root/libcpp-http-client
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=/opt/vcpkg/scripts/buildsystems/vcpkg.cmake
      - name: Build the project
        run: |
          cd /root/libcpp-http-client
          cmake --build build --config Release
      - name: Run tests
        run: |
          cd /root/libcpp-http-client
          ./build/test/test

  linux-test-aarch64:
    needs: linux-test-x86
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - name: Build and test in Docker container
        run: |
          # Ubuntu base image with ARM64 architecture
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker run --name mycontainer -d -t --platform linux/arm64 ubuntu:22.04 tail -f /dev/null
          
          # Prepare the environment inside the container
          docker exec mycontainer bash -c "apt-get update && apt-get install -y build-essential g++ make cmake pkg-config git wget curl zip unzip tar"
          docker exec mycontainer bash -c "git clone https://github.com/microsoft/vcpkg.git /opt/vcpkg && /opt/vcpkg/bootstrap-vcpkg.sh && ln -s /opt/vcpkg/vcpkg /usr/local/bin/vcpkg"
          
          # Copy project files into the container
          docker cp . mycontainer:/root/libcpp-http-client
          
          # Run CMake and build inside the container
          docker exec mycontainer bash -c "cd /root/libcpp-http-client && cmake -B build -S . -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=/opt/vcpkg/scripts/buildsystems/vcpkg.cmake"
          docker exec mycontainer bash -c "cd /root/libcpp-http-client && cmake --build build --config Release"
          
          # Run tests
          docker exec mycontainer bash -c "cd /root/libcpp-http-client/build && ./test/test"

          # Stop the container
          docker stop mycontainer